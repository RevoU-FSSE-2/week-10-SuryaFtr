openapi: 3.0.0

info:
  title: Transfer Request Managament API
  description: Simple API facilitates the interaction between two distinct roles, the Maker and the Approver, focusing on designing a system that efficiently handles transfer requests ensuring security and integrity.
  version: 1.0.0

servers:
  - url: http://localhost:3000/
    description: Development server

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Bearer with JWT Token"
  schemas:
    RegisterUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
          minLength: 8
        role:
          type: string
          enum:
            - maker
            - approver
      required:
        - username
        - password
        - role

    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    BadRequest:
      type: object
      properties:
        error:
          type: string

paths:
  /v1/auth/register:
    post:
      summary: Register a new user
      requestBody:
        description: User details to register a new user
        required: true
        content:
          application/json:
            schema:
              schema:
              $ref: "#/components/schemas/RegisterUser"
      responses:
        200:
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: "User already exists"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"

  /v1/auth/login:
    post:
      summary: "Login user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
      responses:
        "200":
          description: "User successfully logged in"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: string
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"

  /v1/transfers:
    post:
      security:
        - bearer: []
      summary: Create a new transfer request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                currency:
                  type: string
                sourceAccount:
                  type: string
                destinationAccount:
                  type: string
      responses:
        200:
          description: Transfer request created successfully
        400:
          description: Invalid input
        500:
          description: Server error

    get:
      security:
        - bearer: []
      summary: Get all transfer requests list
      responses:
        200:
          description: List of all transfer requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        amount:
                          type: number
                          format: float
                        currency:
                          type: string
                        sourceAccount:
                          type: string
                        destinationAccount:
                          type: string
                        status:
                          type: string
                          enum:
                            - pending
                            - approve
                            - reject
                            - done
                        createdAt:
                          type: string
                        updateAt:
                          type: string

        500:
          description: Server error

  /v1/transfers/{id}:
    patch:
      security:
        - bearer: []
      summary: Update a transfer request by its Id
      parameters:
        - name: id
          in: path
          description: ID of the transfer to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - approve
                    - reject
                    - done
      responses:
        200:
          description: Transfer successfully updated
        400:
          description: Invalid input
        404:
          description: Transfer not found
        500:
          description: Server error
